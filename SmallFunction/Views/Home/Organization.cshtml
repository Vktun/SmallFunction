
@{
    ViewData["Title"] = "Organization";
}
<link href="~/lib/ztree/css/orgnazition/metroStyle.css" rel="stylesheet" />
<script src="~/lib/ztree/js/jquery.ztree.all.js"></script>
<style>
    #deparment, #deparment > div {
        height: 90%;
        min-height: 650px;
    }
</style>
<div class="row" id="deparment">
    <h3 class="text-center">hello</h3>
    <div class="col-sm-3">
        <ul id="treeDemo" class="ztree"></ul>
    </div>
    <div class="col-sm-9">

    </div>
</div>
<div id="tmpl" style="display:none">
    <div class="form-horizontal container" style="max-width:260px;">
        <div class="form-group">
            <label class="col-xs-3 control-label">Id</label>
            <div class="col-xs-9">
                <input type="number" class="form-control input-sm" id="Id" placeholder="id">
            </div>
        </div>
        <div class="form-group">
            <label class="col-xs-3 control-label">名称:</label>
            <div class="col-xs-9">
                <input type="text" class="form-control input-sm" id="nameCN" placeholder="中文">
                <input type="text" class="form-control input-sm" id="nameEN" placeholder="English">
            </div>
        </div>
        <div class="form-group">
            <label class="col-xs-3 control-label">图标:</label>
            <div class="col-xs-9">
                <input type="text" class="form-control input-sm" id="icon" placeholder="图标">
            </div>
        </div>
    </div>
    <div class="text-center">
        <button class="btn btn-sm btn-default" name="closePopover">取消</button>
        <button class="btn btn-sm btn-primary" name="addData">添加</button>
    </div>
</div>
<script>
    var MoveTest = {
        errorMsg: "放错了...请选择正确的类别！",
        curTarget: null,
        curTmpTarget: null,
        noSel: function () {
            try {
                window.getSelection ? window.getSelection().removeAllRanges() : document.selection.empty();
            } catch (e) { }
        },
        dragTree2Dom: function (treeId, treeNodes) {
            return !treeNodes[0].isParent;
        },
        prevTree: function (treeId, treeNodes, targetNode) {
            return !targetNode.isParent && targetNode.parentTId == treeNodes[0].parentTId;
        },
        nextTree: function (treeId, treeNodes, targetNode) {
            return !targetNode.isParent && targetNode.parentTId == treeNodes[0].parentTId;
        },
        innerTree: function (treeId, treeNodes, targetNode) {
            return targetNode != null && targetNode.isParent && targetNode.tId == treeNodes[0].parentTId;
        },
        dragMove: function (e, treeId, treeNodes) {
            var p = null, pId = 'dom_' + treeNodes[0].pId;
            if (e.target.id == pId) {
                p = $(e.target);
            } else {
                p = $(e.target).parent('#' + pId);
                if (!p.get(0)) {
                    p = null;
                }
            }

            $('.domBtnDiv .active').removeClass('active');
            if (p) {
                p.addClass('active');
            }
        },
        dropTree2Dom: function (e, treeId, treeNodes, targetNode, moveType) {
            var domId = "dom_" + treeNodes[0].getParentNode().id;
            if (moveType == null && (domId == e.target.id || $(e.target).parents("#" + domId).length > 0)) {
                var zTree = $.fn.zTree.getZTreeObj("treeDemo");
                zTree.removeNode(treeNodes[0]);

                var newDom = $("span[domId=" + treeNodes[0].id + "]");
                if (newDom.length > 0) {
                    newDom.removeClass("domBtn_Disabled");
                    newDom.addClass("domBtn");
                } else {
                    $("#" + domId).append("<span class='domBtn' domId='" + treeNodes[0].id + "'>" + treeNodes[0].name + "</span>");
                }
                MoveTest.updateType();
            } else if ($(e.target).parents(".domBtnDiv").length > 0) {
                alert(MoveTest.errorMsg);
            }
        },
        dom2Tree: function (e, treeId, treeNode) {
            var target = MoveTest.curTarget, tmpTarget = MoveTest.curTmpTarget;
            if (!target) return;
            var zTree = $.fn.zTree.getZTreeObj("treeDemo"), parentNode;
            if (treeNode != null && treeNode.isParent && "dom_" + treeNode.id == target.parent().attr("id")) {
                parentNode = treeNode;
            } else if (treeNode != null && !treeNode.isParent && "dom_" + treeNode.getParentNode().id == target.parent().attr("id")) {
                parentNode = treeNode.getParentNode();
            }

            if (tmpTarget) tmpTarget.remove();
            if (!!parentNode) {
                var nodes = zTree.addNodes(parentNode, { id: target.attr("domId"), name: target.text() });
                zTree.selectNode(nodes[0]);
            } else {
                target.removeClass("domBtn_Disabled");
                target.addClass("domBtn");
                alert(MoveTest.errorMsg);
            }
            MoveTest.updateType();
            MoveTest.curTarget = null;
            MoveTest.curTmpTarget = null;
        },
        updateType: function () {
            var zTree = $.fn.zTree.getZTreeObj("treeDemo"),
                nodes = zTree.getNodes();
            for (var i = 0, l = nodes.length; i < l; i++) {
                var num = nodes[i].children ? nodes[i].children.length : 0;
                nodes[i].name = nodes[i].name.replace(/ \(.*\)/gi, "") + " (" + num + ")";
                zTree.updateNode(nodes[i]);
            }
        },
        bindDom: function () {
            $(".domBtnDiv").bind("mousedown", MoveTest.bindMouseDown);
        },
        bindMouseDown: function (e) {
            var target = e.target;
            if (target != null && target.className == "domBtn") {
                var doc = $(document), target = $(target),
                    docScrollTop = doc.scrollTop(),
                    docScrollLeft = doc.scrollLeft();
                target.addClass("domBtn_Disabled");
                target.removeClass("domBtn");
                curDom = $("<span class='dom_tmp domBtn'>" + target.text() + "</span>");
                curDom.appendTo("body");

                curDom.css({
                    "top": (e.clientY + docScrollTop + 3) + "px",
                    "left": (e.clientX + docScrollLeft + 3) + "px"
                });
                MoveTest.curTarget = target;
                MoveTest.curTmpTarget = curDom;

                doc.bind("mousemove", MoveTest.bindMouseMove);
                doc.bind("mouseup", MoveTest.bindMouseUp);
                doc.bind("selectstart", MoveTest.docSelect);
            }
            if (e.preventDefault) {
                e.preventDefault();
            }
        },
        bindMouseMove: function (e) {
            MoveTest.noSel();
            var doc = $(document),
                docScrollTop = doc.scrollTop(),
                docScrollLeft = doc.scrollLeft(),
                tmpTarget = MoveTest.curTmpTarget;
            if (tmpTarget) {
                tmpTarget.css({
                    "top": (e.clientY + docScrollTop + 3) + "px",
                    "left": (e.clientX + docScrollLeft + 3) + "px"
                });
            }
            return false;
        },
        bindMouseUp: function (e) {
            var doc = $(document);
            doc.unbind("mousemove", MoveTest.bindMouseMove);
            doc.unbind("mouseup", MoveTest.bindMouseUp);
            doc.unbind("selectstart", MoveTest.docSelect);

            var target = MoveTest.curTarget, tmpTarget = MoveTest.curTmpTarget;
            if (tmpTarget) tmpTarget.remove();

            if ($(e.target).parents("#treeDemo").length == 0) {
                if (target) {
                    target.removeClass("domBtn_Disabled");
                    target.addClass("domBtn");
                }
                MoveTest.curTarget = null;
                MoveTest.curTmpTarget = null;
            }
        },
        bindSelect: function () {
            return false;
        }
    };
    var operation = {
        addHoverDom: function (treeId, treeNode) {
            var sObj = $("#" + treeNode.tId + "_span");
            if (treeNode.editNameFlag || $("#addBtn_" + treeNode.tId).length > 0) {
                $("#addBtn_" + treeNode.tId).show();
                return;
            }
        },
        removeHoverDom: function (treeId, treeNode) {
            $("#addBtn_" + treeNode.tId).hide();
        },
        bindAddBtn: function (ztree) {
            var treeObj = $.fn.zTree.getZTreeObj(ztree);
            if (treeObj) {
                treeObj.expandAll(true);
                var treeNodes = treeObj.getNodesByFilter(function () {
                    return true;
                });
                for (var i = 0, len = treeNodes.length; i < len; i++) {
                    var tid = treeNodes[i].tId;
                    var sObj = $("#" + tid + "_span");
                    if ($("#addBtn_" + tid).length > 0) {
                        return;
                    }
                    var addStr = "<span class='button add' name='addBtn' id='addBtn_" + tid + "'></span>";
                    sObj.after(addStr);
                    var btn = $("#addBtn_" + tid);
                    if (btn) {
                        btn.hide();
                        btn.popover({
                            html: true,
                            trigger: 'manual',
                            container: 'body',
                            title: '添加组织单位',
                            content: "<span name='spanaddBtn" + tid + "'></span>" + $("#tmpl").html()
                        }).on('click', operation.registerPopoverInnerEvent);
                    }
                }
            }
        },
        closePopover: function (currentId) {


        },
        registerPopoverInnerEvent: function () {
            var _this = this;
            $(_this).popover('show');
            $(_this).on('shown.bs.popover', function () {
                $(document).bind("click", function (e) {
                    var target = $(e.target);
                    if (target.closest(".popover").length == 0) {
                        $(_this).popover('hide');
                    }
                });
            });
            $(this).on('hidden.bs.popover', function () {
                $(document).unbind();

            });
        }
    };

    var setting = {
        edit: {
            enable: true,
            showRemoveBtn: true,
            showRenameBtn: true,
            editNameSelectAll: true,
            drag: {
                prev: MoveTest.prevTree,
                next: MoveTest.nextTree,
                inner: MoveTest.innerTree
            }
        },
        data: {
            simpleData: {
                enable: true
            }
        },
        callback: {
            beforeDrag: MoveTest.dragTree2Dom,
            onDrop: MoveTest.dropTree2Dom,
            onDragMove: MoveTest.dragMove,
            onMouseUp: MoveTest.dom2Tree,
        },
        view: {
            addHoverDom: operation.addHoverDom,
            removeHoverDom: operation.removeHoverDom,
            selectedMulti: false,
            showIcon: false
        },
    };

    var zNodes = [
        { id: 1, pId: 0, name: "生物" },
        { id: 2, pId: 1, name: "植物" },
        { id: 3, pId: 1, name: "动物" },
        { id: 20, pId: 3, name: "大象" },
        { id: 29, pId: 3, name: "鲨鱼" },
        { id: 10, pId: 2, name: "大白菜" },
        { id: 19, pId: 2, name: "西红柿" }
    ];

    (function () {
        $.fn.zTree.init($("#treeDemo"), setting, zNodes);
        MoveTest.updateType();
        MoveTest.bindDom();
        setTimeout(operation.bindAddBtn("treeDemo"), 10);
    })()

</script>